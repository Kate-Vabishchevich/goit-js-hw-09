{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/B,IAAIC,EAAU,KAuBd,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BT,EAAUU,YAAW,KACfN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BbP,EAAKC,KAAKc,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,OAAOC,SACzC,IAAIC,EAAYC,OAAON,EAAMO,OAE7B,IAAK,IAAIC,EAAW,EAAGA,GAAYN,EAAOK,MAAOC,GAAY,EAC3DrB,EAAcqB,EAAUH,GACrBI,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACnBqB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEvEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAEzEgB,GAAaC,OAAOL,EAAKM,OAE3BT,EAAEiB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nlet timerId = null;\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.target.elements;\n  let stepValue = Number(delay.value);\n\n  for (let position = 1; position <= amount.value; position += 1) {\n    createPromise(position, stepValue)\n      .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n    stepValue += Number(step.value);\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}  \n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","target","elements","stepValue","Number","value","position1","then","$parcel$interopDefault","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.18f52d9c.js.map"}